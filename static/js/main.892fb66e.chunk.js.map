{"version":3,"sources":["components/header.js","components/total.js","components/table.js","components/map.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","style","animationDelay","Total","props","lastUpdated","overAllState","confirmed","deltaconfirmed","aria-hidden","active","recovered","deltarecovered","deaths","deltadeaths","Table","id","scope","allStatesData","length","map","statewise","index","Fragment","key","cursor","data-toggle","data-target","aria-expanded","aria-controls","color","fontSize","position","left","state","colSpan","allDistrictsData","stateDetails","toUpperCase","districtData","sort","a","b","districtDetails","district","delta","Map","d3Container","useRef","d3Tooltip","useEffect","current","allStates","JSON","parse","stringify","svg","d3","attr","projection","center","scale","translate","tooltip","path","append","selectAll","data","topojson","geoDataIndia","objects","features","enter","d","find","stateDetail","properties","st_nm","range","on","i","this","text","width","height","visibility","ref","backgroundColor","Footer","href","target","rel","App","useState","setAllStatesData","setAllDistrictsData","totalCountDetails","setTotalCountDetails","setLastUpdated","getAllStatesData","axios","get","then","res","stateWiseData","lastupdatedtime","shift","filter","stateData","catch","err","console","log","getAllDistrictsData","refreshData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.892fb66e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction Header() {\r\n\r\n    return (\r\n        <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm fadeIn\" style={{ animationDelay: \"1s\" }}>\r\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\">\r\n                <span className=\"\">&nbsp;COVID-19 India</span></h5>\r\n            {/* <nav className=\"my-2 my-md-0 mr-md-3\">  \r\n                    <a className=\"p-2 text-dark\" href=\"#\">Home</a>\r\n                    <a className=\"p-2 text-dark\" href=\"#\">State View</a> \r\n            </nav>  */}\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nfunction Total(props) {\r\n    //console.log(\"refresh\");\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 d-flex justify-content-center fadeIn\" style={{ animationDelay: \"1.2s\" }}>\r\n                        <p className=\"text-muted\">Last updated : {props.lastUpdated}\r\n                            {/* &nbsp;&nbsp;\r\n                            <i className=\"fa fa-refresh\" aria-hidden=\"true\" style={{cursor:\"pointer\"}} onClick={props.refreshData}></i> */}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-12 d-flex justify-content-center\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-3 fadeIn\" style={{ animationDelay: \"1.3s\" }}>\r\n                                <div className=\"total alert alert-info\">\r\n                                    <span className=\"totalHead\">Total</span>\r\n                                    <span className=\"totalCount\">\r\n                                        {props.overAllState.confirmed}\r\n                                        {\r\n                                            props.overAllState.deltaconfirmed > 0 ?\r\n                                                <span className=\"newCases\">&nbsp;<i className=\"fa fa-level-up\" aria-hidden=\"true\"></i> {props.overAllState.deltaconfirmed}</span>\r\n                                                : \"\"\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-3 fadeIn\" style={{ animationDelay: \"1.4s\" }}>\r\n                                <div className=\"total alert alert-warning\">\r\n                                    <span className=\"totalHead\">Active</span>\r\n                                    <span className=\"totalCount activecase\">\r\n                                        {props.overAllState.active}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-3 fadeIn\" style={{ animationDelay: \"1.5s\" }}>\r\n                                <div className=\"total alert alert-success\">\r\n                                    <span className=\"totalHead\">Recovered</span>\r\n                                    <span className=\"totalCount recovered\">\r\n                                        {props.overAllState.recovered}\r\n                                        {\r\n                                            props.overAllState.deltarecovered > 0 ?\r\n                                                <span className=\"newCases\">&nbsp;<i className=\"fa fa-level-up\" aria-hidden=\"true\"></i> {props.overAllState.deltarecovered}</span>\r\n                                                : \"\"\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-3 fadeIn\" style={{ animationDelay: \"1.6s\" }}>\r\n                                <div className=\"total  alert alert-danger\">\r\n                                    <span className=\"totalHead\">Deaths</span>\r\n                                    <span className=\"totalCount deaths\">\r\n                                        {props.overAllState.deaths}\r\n                                        {\r\n                                            props.overAllState.deltadeaths > 0 ?\r\n                                                <span className=\"newCases\">&nbsp;<i className=\"fa fa-level-up\" aria-hidden=\"true\"></i> {props.overAllState.deltadeaths}</span>\r\n                                                : \"\"\r\n                                        }\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Total;","import React from 'react';\r\n\r\nfunction Table(props) {\r\n    //data-parent=\"#states\"\r\n    return (\r\n        <>\r\n            <div className=\"col-lg-1\">\r\n                &nbsp;\r\n            </div>\r\n            <div className=\"col-lg-5 fadeIn\" style={{ animationDelay: \"1.8s\" }}>\r\n                <div className=\"table-responsive\">\r\n                    <table className=\"table stateTable\" id=\"states\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">State/UT</th>\r\n                                <th scope=\"col\">\r\n                                    <div className=\"d-none d-md-block\">Active</div>\r\n                                    <div className=\"d-sm-none activecase\">A</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div className=\"d-none d-md-block\">Recovered</div>\r\n                                    <div className=\"d-sm-none recovered\">R</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div className=\"d-none d-md-block\">Deaths</div>\r\n                                    <div className=\"d-sm-none deaths\">D</div>\r\n                                </th>\r\n                                <th scope=\"col\">\r\n                                    <div className=\"d-none d-md-block\">Total</div>\r\n                                    <div className=\"d-sm-none\">T</div>\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody className=\"stateBody\">\r\n                            {\r\n                                props.allStatesData.length ?\r\n                                    props.allStatesData.map((statewise, index) =>\r\n                                        <React.Fragment key={index}>\r\n                                            <tr key={index} className={index % 2 === 0 ? \"stateRow\" : \"\"} style={{ cursor: \"pointer\" }} data-toggle=\"collapse\" data-target={\"#districts\" + index}\r\n                                                aria-expanded=\"false\" aria-controls={\"districts\" + index}>\r\n                                                <td>\r\n                                                    <span style={{ color: \"#717171\", fontSize: \"0.80em\", cursor: \"pointer\", position: \"absolute\", left: \"0.20rem\" }}>\r\n                                                        <i className=\"fa fa-chevron-circle-down\" aria-hidden=\"true\"></i>\r\n                                                    </span>\r\n                                                    &nbsp;{statewise.state}\r\n                                                </td>\r\n                                                <td>{statewise.active}</td>\r\n                                                <td>\r\n                                                    {statewise.recovered}\r\n                                                    {\r\n                                                        statewise.deltarecovered > 0 ?\r\n                                                            <span className=\"newCasesTable recovered\">&nbsp;&nbsp;<i className=\"fa fa-arrow-up\" aria-hidden=\"true\">{statewise.deltarecovered}</i> </span>\r\n                                                            : \"\"\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {statewise.deaths}\r\n                                                    {\r\n                                                        statewise.deltadeaths > 0 ?\r\n                                                            <span className=\"newCasesTable deaths\">&nbsp;&nbsp;<i className=\"fa fa-arrow-up\" aria-hidden=\"true\">{statewise.deltadeaths}</i> </span>\r\n                                                            : \"\"\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {statewise.confirmed}\r\n                                                    {\r\n                                                        statewise.deltaconfirmed > 0 ?\r\n                                                            <span className=\" newCasesTable deaths\">&nbsp;&nbsp;<i className=\"fa fa-arrow-up\" aria-hidden=\"true\">{statewise.deltaconfirmed}</i></span>\r\n                                                            : \"\"\r\n                                                    }\r\n                                                </td>\r\n                                            </tr>\r\n                                            <tr key={\"districts\" + index} className=\"districtRow\">\r\n                                                <td colSpan=\"5\" className=\"districtCell\">\r\n                                                    <div className=\"collapse\" id={\"districts\" + index}>\r\n                                                        <table className=\"table table-striped\">\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th scope=\"col\">District</th>\r\n                                                                    <th scope=\"col\">Total</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {\r\n                                                                    props.allDistrictsData.map((stateDetails) => {\r\n                                                                        if (stateDetails.state.toUpperCase() === statewise.state.toUpperCase()) {\r\n                                                                            return (\r\n                                                                                stateDetails.districtData.sort(function (a, b) {\r\n                                                                                    return b.confirmed - a.confirmed\r\n                                                                                }).map((districtDetails, key) =>\r\n                                                                                    <tr key={key}>\r\n                                                                                        <td>{districtDetails.district}</td>\r\n                                                                                        <td>\r\n                                                                                            {districtDetails.confirmed}\r\n                                                                                            {\r\n                                                                                                districtDetails.delta.confirmed > 0 ?\r\n                                                                                                    <span className=\"newCasesTable deaths\">&nbsp;&nbsp;<i className=\"fa fa-arrow-up\" aria-hidden=\"true\"></i> {districtDetails.delta.confirmed}</span>\r\n                                                                                                    : \"\"\r\n                                                                                            }\r\n                                                                                        </td>\r\n                                                                                    </tr>\r\n\r\n                                                                                )\r\n\r\n                                                                            )\r\n                                                                        }\r\n                                                                    })\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </React.Fragment>\r\n                                    ) : <tr><td></td></tr>\r\n                            }\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Table;","import React, { useEffect, useRef } from 'react'\r\nimport * as d3 from 'd3'\r\nimport * as topojson from 'topojson-client';\r\nimport geoDataIndia from '../maps/india';\r\n\r\nfunction Map(props) {\r\n    const d3Container = useRef(null);\r\n    const d3Tooltip = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (props.allStatesData && d3Container.current && d3Tooltip.current) {\r\n\r\n            let allStates = JSON.parse(JSON.stringify(props.allStatesData));\r\n\r\n            const width = 750;\r\n            const height = 500;\r\n\r\n            const svg = d3.select(d3Container.current)\r\n                .attr(\"viewBox\", `0 0 ${width} ${height}`);\r\n\r\n            const projection = d3.geoMercator()\r\n                .center([10, 0])\r\n                //.scale([800/(2*Math.PI)]) \r\n                .scale([750])\r\n                .translate([-600, 550])\r\n\r\n\r\n            const tooltip = d3.select(d3Tooltip.current);\r\n            const path = d3.geoPath().projection(projection)\r\n\r\n\r\n            const g = svg.append(\"g\")\r\n                .attr(\"width\", \"100%\")\r\n                .attr(\"viewBox\", `0 0 ${width} ${height}`)\r\n\r\n            g.selectAll(\"path\")\r\n                .data(topojson.feature(geoDataIndia, geoDataIndia.objects[\"india\"]).features)\r\n                .enter().append(\"path\")\r\n                .attr(\"d\", path)\r\n                .attr(\"fill\", function (d) {\r\n                    let stateDetails = allStates.find(stateDetail => stateDetail.state.toUpperCase() === d.properties.st_nm.toUpperCase())\r\n                    let range = stateDetails ? stateDetails.active : 0;\r\n\r\n                    if (range > 1000)\r\n                        return \"red\";\r\n                    else if (range >= 500 && range <= 999)\r\n                        return \"#D65F59\";\r\n                    else if (range >= 100 && range <= 499)\r\n                        return \"rgb(255, 232, 121)\";\r\n                    else if (range >= 50 && range <= 99)\r\n                        return \"#71e3e8\";\r\n                    else\r\n                        return \"#7cdc7c\";\r\n                }\r\n                )\r\n                .attr(\"stroke\", \"#B4B1B1\")\r\n                .attr(\"stroke-width\", \"1px\")\r\n                .on(\"mouseover\", function (d, i) {\r\n                    d3.select(this).attr(\"stroke-width\", \"2px\").attr(\"stroke\", \"red\");\r\n                })\r\n                .on(\"mouseout\", function (d, i) {\r\n                    d3.select(this).attr(\"stroke-width\", \"1px\").attr(\"stroke\", \"#B4B1B1\");\r\n                    tooltip.style(\"visibility\", \"hidden\");\r\n                })\r\n                .append(\"title\")\r\n                .text(function (d) {\r\n                    let stateDetails = allStates.find(stateDetail => stateDetail.state.toUpperCase() === d.properties.st_nm.toUpperCase())\r\n                    let active = stateDetails ? stateDetails.active : 0;\r\n                    let state = stateDetails ? stateDetails.state : \"\";\r\n                    return `${state} : ${active}`\r\n\r\n                }\r\n                )\r\n\r\n        }\r\n\r\n    }, [props.allStatesData])\r\n\r\n    return (\r\n        <div className=\"col-lg-6 text-center\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-12 fadeIn\" style={{ animationDelay: \"2.0s\" }}>\r\n                    <div className=\"\">\r\n                        <div className=\"tooltip visualization-tooltip\" style={{ width: \"187px\", height: \"172px\", visibility: \"hidden\" }} ref={d3Tooltip}>\r\n                        </div>\r\n                        <svg ref={d3Container}>\r\n                        </svg>\r\n                        <div style={{ fontSize: \"14px\" }}>Active cases</div>\r\n                        <div className=\"d-flex justify-content-center\">\r\n\r\n                            <table className=\"rangeTable\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style={{ backgroundColor: \"#7cdc7c\", width: \"5%\" }}></td>\r\n                                        <td style={{ backgroundColor: \"#71e3e8\", width: \"5%\" }}></td>\r\n                                        <td style={{ backgroundColor: \"rgb(255, 232, 121)\", width: \"5%\" }}></td>\r\n                                        <td style={{ backgroundColor: \"#D65F59\", width: \"5%\" }}></td>\r\n                                        <td style={{ backgroundColor: \"red\", width: \"5%\" }}></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: \"20%\" }}>0-49</td>\r\n                                        <td style={{ width: \"20%\" }}>50-99</td>\r\n                                        <td style={{ width: \"20%\" }}>100-499</td>\r\n                                        <td style={{ width: \"20%\" }}>500-999</td>\r\n                                        <td style={{ width: \"20%\" }}>>=1000</td>\r\n                                    </tr>\r\n\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map","import React from 'react'\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 text-center fadeIn\" style={{ animationDelay: \"2.2s\" }}>\r\n                    <footer className=\"text-center text-muted font-weight-light\">\r\n                        <span style={{ fontSize: \"12px\" }} >\r\n                            Data provider <a href=\"https://api.covid19india.org/\" target=\"_blank\" rel=\"noopener noreferrer\">COVID19-India API</a>&nbsp;&nbsp;|&nbsp;\r\n                            Created by <a href=\"https://github.com/shyamsundar055\" target=\"_blank\" rel=\"noopener noreferrer\">Shyam Sundar</a>\r\n                        </span>\r\n                    </footer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nimport axios from 'axios';\n\nimport Header from './components/header'\nimport Total from './components/total'\nimport Table from './components/table'\nimport Map from './components/map'\nimport Footer from './components/footer'\n\n\nfunction App() {\n  //const [isLoading, setIsLoading] = useState(true);\n  const [allStatesData, setAllStatesData] = useState([]);\n  const [allDistrictsData, setAllDistrictsData] = useState([]);\n  const [totalCountDetails, setTotalCountDetails] = useState({});\n  const [lastUpdated, setLastUpdated] = useState(\"\");\n\n\n  useEffect(() => {\n    getAllStatesData();\n    getAllDistrictsData();\n  }, [])\n\n  function getAllStatesData() {\n    axios.get(\"https://api.covid19india.org/data.json\").then(res => {\n\n      let stateWiseData = res.data.statewise;\n\n      setTotalCountDetails(stateWiseData[0]);\n      setLastUpdated(stateWiseData[0].lastupdatedtime);\n\n      stateWiseData.shift();\n\n      stateWiseData = stateWiseData.filter(stateData => stateData.confirmed > 0)\n        .sort(function (a, b) {\n          return b.confirmed - a.confirmed\n        });\n\n      setAllStatesData(stateWiseData);\n\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function getAllDistrictsData() {\n    axios.get(\"https://api.covid19india.org/v2/state_district_wise.json\").then(res => {\n      setAllDistrictsData(res.data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  const refreshData = () => {\n    getAllStatesData();\n    getAllDistrictsData();\n  }\n\n  return (\n    <>\n      <Header />\n      <Total overAllState={totalCountDetails} lastUpdated={lastUpdated} refreshData={refreshData} />\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <Table allStatesData={allStatesData} allDistrictsData={allDistrictsData} lastUpdated={lastUpdated} />\n          <Map allStatesData={allStatesData} />\n        </div>\n      </div>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}